/*
 * Telstra Messaging API
 * The Telstra Messaging API specification
 *
 * The version of the OpenAPI document: 2.2.9
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.telstra.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * SendSMSRequest
 */

public class SendSMSRequest {
  public static final String SERIALIZED_NAME_TO = "to";
  @SerializedName(SERIALIZED_NAME_TO)
  private String to;

  public static final String SERIALIZED_NAME_BODY = "body";
  @SerializedName(SERIALIZED_NAME_BODY)
  private String body;

  public static final String SERIALIZED_NAME_FROM = "from";
  @SerializedName(SERIALIZED_NAME_FROM)
  private String from;

  public static final String SERIALIZED_NAME_VALIDITY = "validity";
  @SerializedName(SERIALIZED_NAME_VALIDITY)
  private Integer validity;

  public static final String SERIALIZED_NAME_SCHEDULED_DELIVERY = "scheduledDelivery";
  @SerializedName(SERIALIZED_NAME_SCHEDULED_DELIVERY)
  private Integer scheduledDelivery;

  public static final String SERIALIZED_NAME_NOTIFY_U_R_L = "notifyURL";
  @SerializedName(SERIALIZED_NAME_NOTIFY_U_R_L)
  private String notifyURL;

  public static final String SERIALIZED_NAME_REPLY_REQUEST = "replyRequest";
  @SerializedName(SERIALIZED_NAME_REPLY_REQUEST)
  private Boolean replyRequest;

  public static final String SERIALIZED_NAME_PRIORITY = "priority";
  @SerializedName(SERIALIZED_NAME_PRIORITY)
  private Boolean priority;


  public SendSMSRequest to(String to) {
    
    this.to = to;
    return this;
  }

   /**
   * Phone number (in E.164 format) to send the SMS to. This number can be in international format &#x60;\&quot;to\&quot;: \&quot;+61412345678\&quot;&#x60; or in national format. Can be an array of strings if sending to multiple numbers: &#x60;\&quot;to\&quot;:[\&quot;+61412345678\&quot;, \&quot;+61418765432\&quot;]&#x60; 
   * @return to
  **/
  @ApiModelProperty(example = "", required = true, value = "Phone number (in E.164 format) to send the SMS to. This number can be in international format `\"to\": \"+61412345678\"` or in national format. Can be an array of strings if sending to multiple numbers: `\"to\":[\"+61412345678\", \"+61418765432\"]` ")

  public String getTo() {
    return to;
  }


  public void setTo(String to) {
    this.to = to;
  }


  public SendSMSRequest body(String body) {
    
    this.body = body;
    return this;
  }

   /**
   * The text body of the message. Messages longer than 160 characters will be counted as multiple messages. This field contains the message text, this can be up to 1900 (for a single recipient) or 500 (for multiple recipients) UTF-8 characters. As mobile devices rarely support the full range of UTF-8 characters, it is possible that some characters may not be translated correctly by the mobile device 
   * @return body
  **/
  @ApiModelProperty(example = "Test Message", required = true, value = "The text body of the message. Messages longer than 160 characters will be counted as multiple messages. This field contains the message text, this can be up to 1900 (for a single recipient) or 500 (for multiple recipients) UTF-8 characters. As mobile devices rarely support the full range of UTF-8 characters, it is possible that some characters may not be translated correctly by the mobile device ")

  public String getBody() {
    return body;
  }


  public void setBody(String body) {
    this.body = body;
  }


  public SendSMSRequest from(String from) {
    
    this.from = from;
    return this;
  }

   /**
   * This will be the source address that will be displayed on the receiving device. You can set an Alphanumeric sender ID of up to 11 characters that the SMS was sent from. Phone numbers in the &#x60;from&#x60; attribute will be blocked (400-error) to prevent number spoofing.  Most standard ASCII characters are accepted in the alphanumeric &#x60;from&#x60; attribute, however there are some limitations. The following limitations and characters are allowed in the alphanumeric &#x60;from&#x60; attribute; any alphabetic character (e.g. &#x60;abc&#x60;), any number mixed with alphabetic characters (e.g. &#x60;123abc&#x60;), uppercase and lowercase characters (e.g. &#x60;aBc&#x60;), any of the following special characters mixed with alphabetic characters are allowed; &#x60;~!@#$%^&amp;*()~_~+-&#x3D;{}|[];&#39;?,./&#x60; (e.g. &#x60;abc~!@&#x60;), any combination of lowercase, uppercase, numeric or allowed special characters (e.g. &#x60;abc@#123DE&#x60;). All other characters, including spaces and extended ASCII characters, are not allowed (e.g. &#x60;&lt;&gt;:\&quot;\\&#x60;).  If attribute is not present, the service will use the mobile number associated with the application (in E.164 format).  If &#x60;replyRequest&#x60; is set to true, then this field should not be present.  This feature is only available on Telstra Account paid plans, not through Free Trials or credit card paid plans.  *Please note that Alphanumeric sender ID works for domestic, i.e. Australian, destinations only.* 
   * @return from
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Foo_App", value = "This will be the source address that will be displayed on the receiving device. You can set an Alphanumeric sender ID of up to 11 characters that the SMS was sent from. Phone numbers in the `from` attribute will be blocked (400-error) to prevent number spoofing.  Most standard ASCII characters are accepted in the alphanumeric `from` attribute, however there are some limitations. The following limitations and characters are allowed in the alphanumeric `from` attribute; any alphabetic character (e.g. `abc`), any number mixed with alphabetic characters (e.g. `123abc`), uppercase and lowercase characters (e.g. `aBc`), any of the following special characters mixed with alphabetic characters are allowed; `~!@#$%^&*()~_~+-={}|[];'?,./` (e.g. `abc~!@`), any combination of lowercase, uppercase, numeric or allowed special characters (e.g. `abc@#123DE`). All other characters, including spaces and extended ASCII characters, are not allowed (e.g. `<>:\"\\`).  If attribute is not present, the service will use the mobile number associated with the application (in E.164 format).  If `replyRequest` is set to true, then this field should not be present.  This feature is only available on Telstra Account paid plans, not through Free Trials or credit card paid plans.  *Please note that Alphanumeric sender ID works for domestic, i.e. Australian, destinations only.* ")

  public String getFrom() {
    return from;
  }


  public void setFrom(String from) {
    this.from = from;
  }


  public SendSMSRequest validity(Integer validity) {
    
    this.validity = validity;
    return this;
  }

   /**
   * How long the platform should attempt to deliver the message for.  This period is specified in minutes from the message.  Normally if the message cannot be delivered immediately, it will be stored and delivery will be periodically reattempted. The network will attempt to send the message for up to seven days. It is possible to define a period smaller than 7 days by including this parameter and specifying the number of minutes that delivery should be attempted.  e.g.: including &#x60;\&quot;validity\&quot;: 60&#x60; will specify that if a message can&#39;t be delivered within the first 60 minutes then the network should stop. 
   * @return validity
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "5", value = "How long the platform should attempt to deliver the message for.  This period is specified in minutes from the message.  Normally if the message cannot be delivered immediately, it will be stored and delivery will be periodically reattempted. The network will attempt to send the message for up to seven days. It is possible to define a period smaller than 7 days by including this parameter and specifying the number of minutes that delivery should be attempted.  e.g.: including `\"validity\": 60` will specify that if a message can't be delivered within the first 60 minutes then the network should stop. ")

  public Integer getValidity() {
    return validity;
  }


  public void setValidity(Integer validity) {
    this.validity = validity;
  }


  public SendSMSRequest scheduledDelivery(Integer scheduledDelivery) {
    
    this.scheduledDelivery = scheduledDelivery;
    return this;
  }

   /**
   * How long the platform should wait before attempting to send the message - specified in minutes.  e.g.: If &#x60;\&quot;scheduledDelivery\&quot;: 120&#x60; is included, then the network will not attempt to start message delivery for two hours after the message has been submitted 
   * @return scheduledDelivery
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1", value = "How long the platform should wait before attempting to send the message - specified in minutes.  e.g.: If `\"scheduledDelivery\": 120` is included, then the network will not attempt to start message delivery for two hours after the message has been submitted ")

  public Integer getScheduledDelivery() {
    return scheduledDelivery;
  }


  public void setScheduledDelivery(Integer scheduledDelivery) {
    this.scheduledDelivery = scheduledDelivery;
  }


  public SendSMSRequest notifyURL(String notifyURL) {
    
    this.notifyURL = notifyURL;
    return this;
  }

   /**
   * Contains a URL that will be called once your message has been processed. The status may be delivered, expired, deleted, etc. Please refer to the Delivery Status section for more information.  If you are using a domain URL you must include the forward slash at the end of the URL (e.g. http://www.example.com/). 
   * @return notifyURL
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "http://www.example.com/", value = "Contains a URL that will be called once your message has been processed. The status may be delivered, expired, deleted, etc. Please refer to the Delivery Status section for more information.  If you are using a domain URL you must include the forward slash at the end of the URL (e.g. http://www.example.com/). ")

  public String getNotifyURL() {
    return notifyURL;
  }


  public void setNotifyURL(String notifyURL) {
    this.notifyURL = notifyURL;
  }


  public SendSMSRequest replyRequest(Boolean replyRequest) {
    
    this.replyRequest = replyRequest;
    return this;
  }

   /**
   * If set to true, the reply message functionality will be implemented. The &#x60;from&#x60; field should not be present.  If false or not present, then normal message handling is implemented.  When set to true, network will use a temporary number to deliver this message. All messages sent by a mobile to this temporary number will be stored against the same &#x60;messageId&#x60;. If a &#x60;notifyURL&#x60; is provided then user replies will be delivered to the URL where &#x60;messageId&#x60; will be same as &#x60;messageId&#x60; in the response to the original API request.  This field contains the message text, this can be up to 500 UTF-8 characters. As mobile devices rarely support the full range of UTF-8 characters, it is possible that some characters may not be translated correctly by the mobile device. 
   * @return replyRequest
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "false", value = "If set to true, the reply message functionality will be implemented. The `from` field should not be present.  If false or not present, then normal message handling is implemented.  When set to true, network will use a temporary number to deliver this message. All messages sent by a mobile to this temporary number will be stored against the same `messageId`. If a `notifyURL` is provided then user replies will be delivered to the URL where `messageId` will be same as `messageId` in the response to the original API request.  This field contains the message text, this can be up to 500 UTF-8 characters. As mobile devices rarely support the full range of UTF-8 characters, it is possible that some characters may not be translated correctly by the mobile device. ")

  public Boolean getReplyRequest() {
    return replyRequest;
  }


  public void setReplyRequest(Boolean replyRequest) {
    this.replyRequest = replyRequest;
  }


  public SendSMSRequest priority(Boolean priority) {
    
    this.priority = priority;
    return this;
  }

   /**
   * When messages are queued up for a number, then it is possible to set where a new message will be placed in the queue. If the priority is set to true then the new message will be placed ahead of all messages with a normal priority. If there are no messages queued for the number, then this parameter has no effect. 
   * @return priority
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "When messages are queued up for a number, then it is possible to set where a new message will be placed in the queue. If the priority is set to true then the new message will be placed ahead of all messages with a normal priority. If there are no messages queued for the number, then this parameter has no effect. ")

  public Boolean getPriority() {
    return priority;
  }


  public void setPriority(Boolean priority) {
    this.priority = priority;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SendSMSRequest sendSMSRequest = (SendSMSRequest) o;
    return Objects.equals(this.to, sendSMSRequest.to) &&
        Objects.equals(this.body, sendSMSRequest.body) &&
        Objects.equals(this.from, sendSMSRequest.from) &&
        Objects.equals(this.validity, sendSMSRequest.validity) &&
        Objects.equals(this.scheduledDelivery, sendSMSRequest.scheduledDelivery) &&
        Objects.equals(this.notifyURL, sendSMSRequest.notifyURL) &&
        Objects.equals(this.replyRequest, sendSMSRequest.replyRequest) &&
        Objects.equals(this.priority, sendSMSRequest.priority);
  }

  @Override
  public int hashCode() {
    return Objects.hash(to, body, from, validity, scheduledDelivery, notifyURL, replyRequest, priority);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SendSMSRequest {\n");
    sb.append("    to: ").append(toIndentedString(to)).append("\n");
    sb.append("    body: ").append(toIndentedString(body)).append("\n");
    sb.append("    from: ").append(toIndentedString(from)).append("\n");
    sb.append("    validity: ").append(toIndentedString(validity)).append("\n");
    sb.append("    scheduledDelivery: ").append(toIndentedString(scheduledDelivery)).append("\n");
    sb.append("    notifyURL: ").append(toIndentedString(notifyURL)).append("\n");
    sb.append("    replyRequest: ").append(toIndentedString(replyRequest)).append("\n");
    sb.append("    priority: ").append(toIndentedString(priority)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

